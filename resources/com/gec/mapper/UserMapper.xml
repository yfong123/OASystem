<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gec.mapper.UserMapper">

	<resultMap type="User" id="userMap">
		<id column="id" property="id"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="nickName" property="nickname"/>
		<result column="deptId" property="deptid"/>
		<result column="email" property="email"/>
		<result column="no" property="no"/>
		<result column="sex" property="sex"/>
		<result column="createdate" property="createdate"/>
		<collection property="roles" column="roleId" ofType="Role">
			<id column="roleId" property="id"/>
			<result column="roleName" property="rolename"/>
		</collection>
	</resultMap>
	
	<select id="queryUserByName" resultMap="userMap">
		select u.*, r.id roleId, r.roleName
		from user_role ur 
		left join user u on u.id = ur.user_id
		left join role r on r.id = ur.role_id
		where u.username = #{username}
	</select>
	
	<select id="queryByNo" resultMap="userMap">
		select u.*, r.id roleId, r.roleName
		from user_role ur 
		left join user u on u.id = ur.user_id
		left join role r on r.id = ur.role_id
		where u.no = #{no}
	</select>
	
	<select id="queryUserList" resultMap="userMap">
		select u.*, r.id roleId, r.roleName
		from user_role ur 
		left join user u on u.id = ur.user_id
		left join role r on r.id = ur.role_id
		<where>
			and u.id != 'a01'
			<if test="data.id!=null and data.id!='' ">
				and u.id = #{data.id}
			</if>
			<if test="data.username!=null and data.username!='' ">
				and u.username like "%"#{data.username}"%"
			</if>
			<if test="data.nickName!=null and data.nickName!='' ">
				and u.nickName like '%${data.nickName}%'
			</if>
			<if test="data.no!=null and data.no!='' ">
				and u.no like '%${data.no}%'
			</if>
			<if test="data.sex!=null and data.sex!='' ">
				and u.sex = #{data.sex}
			</if>
			<if test="data.deptId!=null and data.deptId!='' ">
				and u.deptId = #{data.deptId}
			</if>
			<if test="data.roleId!=null and data.roleId!='' ">
				and r.id = #{data.roleId}
			</if>
		</where>
		limit #{offset},#{limit}
	</select>
	
	<select id="queryUserCount" parameterType="java.util.Map" resultType="int">
		select count(*) from user_role ur 
		left join user u on u.id = ur.user_id
		left join role r on r.id = ur.role_id
		<where>
			and u.id != 'a01'
			<if test="username!=null and username!='' ">
				and u.username like "%"#{username}"%"
			</if>
			<if test="nickName!=null and nickName!='' ">
				and u.nickName like '%${nickName}%'
			</if>
			<if test="sex!=null and sex!='' ">
				and u.sex = #{sex}
			</if>
			<if test="no!=null and no!='' ">
				and u.no like '%${no}%'
			</if>
			<if test="deptId!=null and deptId!='' ">
				and u.deptId = #{deptId}
			</if>
		</where>
	</select>
	
	<update id="updateUserRole">
		update user_role set role_id=#{roleId} where user_id=#{id}
	</update>
	
	<delete id="deleteUserRole">
		delete from user_role where user_id = #{id}
	</delete>
	
	<insert id="insertUserRole">
		insert into user_role(user_id,role_id) values(#{id},#{roleId})
	</insert>
	
	<select id="queryMaxId" resultType="string">
		select max(id) from user where id!='a01'
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
  <resultMap id="BaseResultMap" type="com.gec.domain.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickName" jdbcType="VARCHAR" property="nickname" />
    <result column="deptId" jdbcType="VARCHAR" property="deptid" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="sex" jdbcType="CHAR" property="sex" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, nickName, deptId, email, no, createDate, sex
  </sql>
  <select id="selectByExample" parameterType="com.gec.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.gec.domain.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gec.domain.User">
    insert into user (id, username, password, 
      nickName, deptId, email, 
      no, createDate, sex)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{deptid,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{no,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, #{sex,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gec.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickname != null">
        nickName,
      </if>
      <if test="deptid != null">
        deptId,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="createdate != null">
        createDate,
      </if>
      <if test="sex != null">
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="deptid != null">
        #{deptid,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gec.domain.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickName = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.deptid != null">
        deptId = #{record.deptid,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.no != null">
        no = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null">
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nickName = #{record.nickname,jdbcType=VARCHAR},
      deptId = #{record.deptid,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      no = #{record.no,jdbcType=VARCHAR},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      sex = #{record.sex,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gec.domain.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="deptid != null">
        deptId = #{deptid,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gec.domain.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      deptId = #{deptid,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      no = #{no,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
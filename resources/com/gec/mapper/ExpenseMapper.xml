<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gec.mapper.ExpenseMapper">

	<select id="queryUidByRoleDept" resultType="string">
		SELECT u.id FROM user_role ur
		left join role r on ur.role_id = r.id
		left join user u on ur.user_id = u.id
		where r.roleName = #{roleName} and u.deptId =
		(SELECT d.id FROM dept d where d.deptName=#{deptName})
		limit 0,1
	</select>
	
	<select id="queryMyInitiate" resultType="expense">
		select lv.*, u.nickName assigneeName
		from t_expense lv
		left join user u on u.id = lv.assignee
		where lv.initiator=#{initiator}
		limit #{offset},#{limit}
	</select>
	
	<select id="queryMyInitiateCount" resultType="int">
		select count(*) from t_expense lv
		left join user u on u.id = lv.assignee
		where lv.initiator=#{initiator}
	</select>
	
	<select id="queryWaitMyApprove" resultType="expense">
		select lv.*,u.nickName initiatorName
		from t_expense lv
		left join user u on u.id = lv.initiator
		where lv.assignee = #{assigneeId}
		limit #{offset},#{limit}
	</select>
	
	<select id="queryWaitMyApproveCount" resultType="int">
		select count(*) from t_expense lv
		left join user u on u.id = lv.initiator
		where lv.assignee = #{assigneeId}
	</select>
	
	<select id="queryMyApproved" resultType="expense">
		SELECT u1.nickName initiatorName,u2.nickName assigneeName,lv.* 
		FROM `act_hi_taskinst` aht 
		left join t_expense lv on lv.procInstId=aht.PROC_INST_ID_ 
		left join user u1 on u1.id = lv.initiator 
		left join user u2 on u2.id = lv.assignee
		where aht.ASSIGNEE_=#{assigneeId}
		and aht.ASSIGNEE_!=lv.initiator
		limit #{offset},#{limit}
	</select>
	
	<select id="queryMyApprovedCount" resultType="int">
		SELECT count(*) FROM `act_hi_taskinst` aht 
		left join t_expense lv on lv.procInstId=aht.PROC_INST_ID_ 
		left join user u1 on u1.id = lv.initiator 
		left join user u2 on u2.id = lv.assignee
		where aht.ASSIGNEE_=#{assigneeId}
		and aht.ASSIGNEE_!=lv.initiator
	</select>
	
	<select id="queryMyTaskByTaskId" resultType="expense">
		select lv.*,u.nickName initiatorName
		from t_expense lv
		left join user u on u.id = lv.initiator
		where lv.taskId = #{taskId}
	</select>
	
	<update id="updateStatus">
		update t_expense lv
		set lv.status=#{status},
		lv.finishTime=now()
		where lv.procInstId=#{insId}
	</update>
	
	<update id="updateAssigneeAndTask">
		update t_expense set taskId=#{taskId},assignee=#{assignee}
		where procInstId=#{insId}
	</update>
	
	<!-- <update id="updateStatusByTask">
		update t_expense lv
		set lv.status=#{status}
		where lv.taskId=#{taskId}
	</update>
	
	<update id="updateAssigneeByTask">
		update t_expense lv
		set lv.assignee=#{assignee}
		where lv.taskId=#{taskId}
	</update> -->
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
  <resultMap id="BaseResultMap" type="com.gec.domain.Expense">
    <result column="procInstId" jdbcType="VARCHAR" property="procinstid" />
    <result column="procDefId" jdbcType="VARCHAR" property="procdefid" />
    <result column="taskId" jdbcType="VARCHAR" property="taskid" />
    <result column="orderDate" jdbcType="TIMESTAMP" property="orderdate" />
    <result column="expenseDate" jdbcType="TIMESTAMP" property="expensedate" />
    <result column="orderDesc" jdbcType="VARCHAR" property="orderdesc" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="days" jdbcType="INTEGER" property="days" />
    <result column="createTime" jdbcType="VARCHAR" property="createtime" />
    <result column="finishTime" jdbcType="VARCHAR" property="finishtime" />
    <result column="initiator" jdbcType="VARCHAR" property="initiator" />
    <result column="assignee" jdbcType="VARCHAR" property="assignee" />
    <result column="status" jdbcType="CHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    procInstId, procDefId, taskId, orderDate, expenseDate, orderDesc, money, days, createTime, 
    finishTime, initiator, assignee, status
  </sql>
  <select id="selectByExample" parameterType="com.gec.domain.ExpenseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.gec.domain.ExpenseExample">
    delete from t_expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gec.domain.Expense">
    insert into t_expense (procInstId, procDefId, taskId, 
      orderDate, expenseDate, orderDesc, 
      money, days, createTime, 
      finishTime, initiator, assignee, 
      status)
    values (#{procinstid,jdbcType=VARCHAR}, #{procdefid,jdbcType=VARCHAR}, #{taskid,jdbcType=VARCHAR}, 
      #{orderdate,jdbcType=TIMESTAMP}, #{expensedate,jdbcType=TIMESTAMP}, #{orderdesc,jdbcType=VARCHAR}, 
      #{money,jdbcType=DOUBLE}, #{days,jdbcType=INTEGER}, #{createtime,jdbcType=VARCHAR}, 
      #{finishtime,jdbcType=VARCHAR}, #{initiator,jdbcType=VARCHAR}, #{assignee,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gec.domain.Expense">
    insert into t_expense
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="procinstid != null">
        procInstId,
      </if>
      <if test="procdefid != null">
        procDefId,
      </if>
      <if test="taskid != null">
        taskId,
      </if>
      <if test="orderdate != null">
        orderDate,
      </if>
      <if test="expensedate != null">
        expenseDate,
      </if>
      <if test="orderdesc != null">
        orderDesc,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="days != null">
        days,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="finishtime != null">
        finishTime,
      </if>
      <if test="initiator != null">
        initiator,
      </if>
      <if test="assignee != null">
        assignee,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="procinstid != null">
        #{procinstid,jdbcType=VARCHAR},
      </if>
      <if test="procdefid != null">
        #{procdefid,jdbcType=VARCHAR},
      </if>
      <if test="taskid != null">
        #{taskid,jdbcType=VARCHAR},
      </if>
      <if test="orderdate != null">
        #{orderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="expensedate != null">
        #{expensedate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderdesc != null">
        #{orderdesc,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="days != null">
        #{days,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="finishtime != null">
        #{finishtime,jdbcType=VARCHAR},
      </if>
      <if test="initiator != null">
        #{initiator,jdbcType=VARCHAR},
      </if>
      <if test="assignee != null">
        #{assignee,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gec.domain.ExpenseExample" resultType="java.lang.Long">
    select count(*) from t_expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_expense
    <set>
      <if test="record.procinstid != null">
        procInstId = #{record.procinstid,jdbcType=VARCHAR},
      </if>
      <if test="record.procdefid != null">
        procDefId = #{record.procdefid,jdbcType=VARCHAR},
      </if>
      <if test="record.taskid != null">
        taskId = #{record.taskid,jdbcType=VARCHAR},
      </if>
      <if test="record.orderdate != null">
        orderDate = #{record.orderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expensedate != null">
        expenseDate = #{record.expensedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderdesc != null">
        orderDesc = #{record.orderdesc,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.days != null">
        days = #{record.days,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.finishtime != null">
        finishTime = #{record.finishtime,jdbcType=VARCHAR},
      </if>
      <if test="record.initiator != null">
        initiator = #{record.initiator,jdbcType=VARCHAR},
      </if>
      <if test="record.assignee != null">
        assignee = #{record.assignee,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_expense
    set procInstId = #{record.procinstid,jdbcType=VARCHAR},
      procDefId = #{record.procdefid,jdbcType=VARCHAR},
      taskId = #{record.taskid,jdbcType=VARCHAR},
      orderDate = #{record.orderdate,jdbcType=TIMESTAMP},
      expenseDate = #{record.expensedate,jdbcType=TIMESTAMP},
      orderDesc = #{record.orderdesc,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      days = #{record.days,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=VARCHAR},
      finishTime = #{record.finishtime,jdbcType=VARCHAR},
      initiator = #{record.initiator,jdbcType=VARCHAR},
      assignee = #{record.assignee,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>